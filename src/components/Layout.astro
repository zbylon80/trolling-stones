---
import "../styles/global.css";
import CookieBanner from "./CookieBanner.astro";

const siteOrigin = Astro.site?.origin ?? Astro.url?.origin ?? "";
const rawPathName = Astro.url.pathname ?? "/";
const pathName =
  rawPathName.length > 1 && rawPathName.endsWith("/")
    ? rawPathName.slice(0, -1)
    : rawPathName;
const canonicalUrl = siteOrigin ? `${siteOrigin}${pathName}` : pathName;
const ogImage = siteOrigin ? `${siteOrigin}/images/hero.jpg` : "/images/hero.jpg";
const logoPath = "/images/logo.jpg";
const logoUrl = siteOrigin ? `${siteOrigin}${logoPath}` : logoPath;
const providedLang = Astro.props.lang;
const lang = providedLang === "en" ? "en" : "pl";

const defaults = {
  pl: {
    title: "TRolling Stones",
    description: "Oficjalna strona zespołu TRolling Stones",
    locale: "pl_PL",
    nav: [
      { label: "Koncerty", slug: "/koncerty" },
      { label: "Galeria", slug: "/galeria" },
      { label: "Aktualności", slug: "/aktualnosci" },
      { label: "Bio", slug: "/bio" },
      { label: "Skład", slug: "/sklad" },
      { label: "Kontakt", slug: "/kontakt" }
    ],
    toggleLabel: "EN",
    toggleTitle: "Switch to English",
    footer: "© " + new Date().getFullYear() + " TRolling Stones – wszelkie prawa zastrzeżone."
  },
  en: {
    title: "TRolling Stones",
    description: "Official website of TRolling Stones",
    locale: "en_US",
    nav: [
      { label: "Shows", slug: "/koncerty" },
      { label: "Gallery", slug: "/galeria" },
      { label: "News", slug: "/aktualnosci" },
      { label: "Bio", slug: "/bio" },
      { label: "Line-up", slug: "/sklad" },
      { label: "Contact", slug: "/kontakt" }
    ],
    toggleLabel: "PL",
    toggleTitle: "Przełącz na polski",
    footer: "© " + new Date().getFullYear() + " TRolling Stones – all rights reserved."
  }
} as const;

const basePath = lang === "en" ? "/en" : "";
const homeHref = lang === "en" ? "/en" : "/";

const plHref = pathName.startsWith("/en") ? pathName.replace(/^\/en/, "") || "/" : pathName || "/";
const enHref =
  pathName.startsWith("/en") ? pathName : pathName === "/" ? "/en" : `/en${pathName}`;

const { title = defaults[lang].title, description = defaults[lang].description } = Astro.props;

const structuredData = {
  "@context": "https://schema.org",
  "@type": "MusicGroup",
  name: "TRolling Stones",
  url: siteOrigin || undefined,
  logo: logoUrl,
  image: [logoUrl, ogImage],
  sameAs: [
    "https://www.youtube.com/@TRollnStones",
    "https://www.facebook.com/stones3city",
    "https://www.instagram.com/trollnstones/",
    "https://www.tiktok.com/@trollnstones"
  ]
};
---
<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="theme-color" content="#000000" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="icon" type="image/png" sizes="64x64" href="/favicon-64.png" />
    <link rel="icon" type="image/png" sizes="128x128" href="/favicon-128.png" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <meta name="google-site-verification" content="yzvYq1K4LrHnxUqZLI39cGlQVfze41ElrWh1v36kU3Y" />
    <link rel="canonical" href={canonicalUrl} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:locale" content={defaults[lang].locale} />
    <meta property="og:image" content={ogImage} />
    {siteOrigin && <meta property="og:url" content={canonicalUrl} />}
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />
    <script type="application/ld+json">{JSON.stringify(structuredData)}</script>
  </head>
  <body>
    <div class="sticky top-0 z-50 border-b border-neutral-800/60 bg-black/95 backdrop-blur">
      <div class="container flex justify-end gap-2 py-1">
        {(["pl", "en"] as const).map((code) => (
          <a
            href={code === "pl" ? plHref : enHref}
            class:list={{
              "flex items-center gap-2 rounded px-2 py-1 text-xs uppercase tracking-wide transition": true,
              "border border-neutral-700 hover:border-neutral-500 text-neutral-200": lang !== code,
              "border border-white/40 bg-white/10 text-white": lang === code
            }}
            aria-current={lang === code ? "page" : undefined}
            aria-label={code === "pl" ? "Polski" : "English"}
          >
            <img
              src={code === "pl" ? "/images/flags/pl.svg" : "/images/flags/gb.svg"}
              alt=""
              width="16"
              height="16"
              class="h-4 w-4"
            />
            {code.toUpperCase()}
          </a>
        ))}
      </div>
    </div>
    <header class="sticky top-[2.25rem] z-40 border-b border-neutral-800 bg-black/90">
      <div class="container flex flex-col gap-3 pt-2 pb-1 sm:flex-row sm:items-center sm:justify-between sm:pt-1 sm:pb-0.5 md:py-0">
        <div class="flex items-center justify-between gap-3">
          <a href={homeHref} class="flex items-center gap-3 font-bold tracking-wide text-lg sm:text-xl">
            <img src="/images/logo.jpg" alt="Logo TRolling Stones" class="h-20 w-20 sm:h-[7.5rem] sm:w-[7.5rem] md:h-[11.25rem] md:w-[11.25rem] rounded-full object-cover" width="144" height="144" />
            <span>TRolling Stones</span>
          </a>
        </div>
        <nav class="flex flex-wrap justify-center sm:justify-end gap-3 sm:gap-4 text-sm">
          {defaults[lang].nav.map((link) => (
            <a href={`${basePath}${link.slug}`}>{link.label}</a>
          ))}
        </nav>
      </div>
    </header>
    <main>
      <slot />
    </main>
    <footer class="border-t border-neutral-800 mt-16">
      <div class="container py-8 text-sm text-neutral-400">
        {defaults[lang].footer}
      </div>
    </footer>
    <CookieBanner lang={lang} />
  </body>
</html>
